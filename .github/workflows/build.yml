name: build
on:
  push:
    branches:
      - main
      - autobuild
jobs:
  prepare:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: "C:\\NTVDMBLD"
    steps:
      - name: "Create Directories"
        working-directory: "C:\\"
        run: mkdir 'C:\REPO', 'C:\NTVDMBLD'
      - name: "Checkout Repository"
        run: "git clone https://github.com/$env:GITHUB_REPOSITORY C:\\REPO"
      - name: Install 7zip
        uses: crazy-max/ghaction-chocolatey@v1
        with:
          args: install 7zip.install

      - if: ${{ steps.Windows-build-cache-deps.cache-hit == false }}
        name: "Download old-src.trunk.r687.20150728.7z"
        shell: powershell
        run: "Invoke-WebRequest -Uri https://bits.sigpipe.me/mirrors/file.opennt.net/release/obsolete/sr687/old-src-sr687.7z -OutFile old-src-sr687.7z"
      - if: ${{ steps.Windows-build-cache-deps.cache-hit == false }}
        name: "Download MinNT-20170416-85fac4faadc77203db8ddc66af280a75c1b717b0.zip"
        shell: powershell
        run: "Invoke-WebRequest -Uri https://web.archive.org/web/20191230001029if_/http://file.opennt.net/release/snapshot/MinNT-20170416-85fac4faadc77203db8ddc66af280a75c1b717b0.zip -OutFile MinNT-20170416-85fac4faadc77203db8ddc66af280a75c1b717b0.zip"
      - if: ${{ steps.Windows-build-cache-deps.cache-hit == false }}
        name: "Download de_windows_7_professional_with_sp1_x86_dvd_u_677093.iso"
        shell: powershell
        run: "Invoke-WebRequest -Uri https://download-market.ru/Windows%207%20Professional/German/x86/de_windows_7_professional_with_sp1_x86_dvd_u_677093.iso -OutFile de_windows_7_professional_with_sp1_x86_dvd_u_677093.iso"
      - if: ${{ steps.Windows-build-cache-deps.cache-hit == false }}
        name: "Download GRMWDK_EN_7600_1.ISO"
        shell: powershell
        run: "Invoke-WebRequest -Uri https://download.microsoft.com/download/4/A/2/4A25C7D5-EFBE-4182-B6A9-AE6850409A78/GRMWDK_EN_7600_1.ISO -OutFile GRMWDK_EN_7600_1.ISO"
      - if: ${{ steps.Windows-build-cache-deps.cache-hit == false }}
        name: "Download GRMSDK_EN_DVD.iso"
        shell: powershell
        run: "Invoke-WebRequest -Uri https://download.microsoft.com/download/F/1/0/F10113F5-B750-4969-A255-274341AC6BCE/GRMSDK_EN_DVD.iso -OutFile GRMSDK_EN_DVD.iso"
      - if: ${{ steps.Windows-build-cache-deps.cache-hit == false }}
        name: "Download NTOSBE-master.zip"
        shell: powershell
        run: "Invoke-WebRequest -Uri http://web.archive.org/web/20210804144408if_/https://codeload.github.com/stephanosio/NTOSBE/zip/master -OutFile NTOSBE-master.zip"
      - if: ${{ steps.Windows-build-cache-deps.cache-hit == false }}
        name: Cache build dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-deps
        with:
          path: "C:\\NTVDMBLD"
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}
      - name: "Move build scripts to working directory"
        run: "mv C:\\REPO\\autobuild\\* ."
  build:
    strategy:
      matrix:
        cpu: [ccpu, haxm]
    name: build_${{ matrix.cpu }}
    runs-on: windows-latest
    needs: prepare
    steps:
      - name: "Build NTVDMx64"
        shell: cmd
        run: autobuild-${{ matrix.cpu }}-fre.cmd
        env:
          SRCDIR: "C:\\REPO\\ntvdmpatch"
      - name: Rename folders to contain cpu version
        # https://superuser.com/a/1207117/1205900
        shell: powershell
        working-directory: "C:\\NTVDMBLD\\releases\\"
        run: ls | Rename-Item -NewName { "${{ matrix.cpu }}_" + $_.Name }
      - name: "Upload artifacts"
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ matrix.cpu }}
          path: "C:\\NTVDMBLD\\releases\\"